Zap Integration - 

mvn clean test -Dsurefire.suiteXmlFiles=testNG/desktop.xml  -Dtest_suite_type=regression -Dtest_env=prod -DRETRY_BUILD_NUMBER= -Dretry_failed_test=yes -DrunOnBrowser=chrome -Dtest_case_id=Nykaa_TC_56_PDP -DexecutorCapacity=1 -Duse_zap_proxy=yes -Dmaven.surefire.debug=true

----------------- ----------------- For Docker With ZAP 2.11 ------------------------

# install jq
apt install jq

# install ZAP
wget https://github.com/zaproxy/zaproxy/releases/download/v2.11.1/ZAP_2.11.1_Linux.tar.gz
tar -xvzf ZAP_2.11.1_Linux.tar.gz
cd ZAP_2.11.1/plugin && wget https://github.com/zaproxy/zap-extensions/releases/download/2.7/exportreport-alpha-5.zap

# start zap in headless mode
cd ../../ZAP_2.11.1/
./zap.sh -daemon -host localhost -port 8080 -config api.disablekey=true -config 'api.addrs.addr.name=.*' -config api.addrs.addr.regex=true
OR 
sudo ./zap.sh -daemon -host localhost -port 8080 -config api.disablekey=true -config 'api.addrs.addr.name=.*' -config api.addrs.addr.regex=true

Use private IP of machine while running else this port won't be accessible from outside.
sudo ./zap.sh -daemon -host 172.26.0.90 -port 8090 -config api.disablekey=true -config 'api.addrs.addr.name=.*' -config api.addrs.addr.regex=true &

Note - Setup a nginx proxy - redirecting to ZAP server. User Actual ZAP Server in automated tests, not the nginx proxy. 

Expose volume -v $(pwd):/zap/wrk/:rw


# Run all your test cases here by setting up a proxy host as localhost and proxy port as 8080

----------------- ----------------- For Docker With ZAP 2.7 ------------------------

unset DISPLAY
sudo sed -i -e '/^assistive_technologies=/s/^/#/' /etc/java-*-openjdk/accessibility.properties

# install jq
sudo apt install jq

# install ZAP
sudo wget https://github.com/zaproxy/zaproxy/releases/download/2.7.0/ZAP_2.7.0_Linux.tar.gz
sudo tar -xvzf /ZAP_2.7.0_Linux.tar.gz
cd /ZAP_2.7.0/plugin
sudo wget https://github.com/zaproxy/zap-extensions/releases/download/2.7/exportreport-alpha-5.zap

# start zap in headless mode
cd /ZAP_2.7.0/
zap.sh -daemon -host localhost -port 8080 -config api.disablekey=true -config 'api.addrs.addr.name=.*' -config api.addrs.addr.regex=true

---------------------------------- ---------------------------------- -----------------

# check for proxied URLs
curl -X GET http://localhost:8080/JSON/core/view/urls/ | jq

# start active scan
curl -X GET "http://localhost:8080/JSON/ascan/action/scan/?url=https://www.nykaa.com" | jq

# check the scan status
curl -X GET http://localhost:8080/JSON/ascan/view/status/ | jq

# get json report
curl -X GET http://localhost:8080/JSON/core/view/alerts | jq

# get HTML report
curl -X GET http://localhost:8080/OTHER/core/other/htmlreport/


